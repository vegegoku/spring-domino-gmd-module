dependencies {
  // logger
  compile("org.apache.logging.log4j:log4j-core:$log4jVersion")
  compile("org.apache.logging.log4j:log4j-api:$log4jVersion")

  // gwt-material
  compileOnly("com.github.gwtmaterialdesign:gwt-material:$gwtMaterialVersion")
  compileOnly("com.github.gwtmaterialdesign:gwt-material-addins:$gwtMaterialAddinsVersion")
  compileOnly("com.github.gwtmaterialdesign:gwt-material-themes:$gwtMaterialThemesVersion")
  compileOnly("com.github.gwtmaterialdesign:gwt-material-table:$gwtMaterialTableVersion")

  // domino
  compileOnly("com.progressoft.brix.domino.api:domino-api-shared:$dominoVersion")
  compileOnly("com.progressoft.brix.domino.api:domino-api-client:$dominoVersion")
  compileOnly("com.progressoft.brix.domino.impl:domino-gwt:$dominoVersion")
  compileOnly("com.progressoft.brix.domino.logging:domino-gwt-logger:$dominoVersion")
  compileOnly("com.progressoft.brix.domino:domino-client-commons:$dominoVersion")

  compileOnly("com.google.elemental2:elemental2-core:$elemental2Version")
  compileOnly("com.google.elemental2:elemental2-dom:$elemental2Version")
  compileOnly("org.fusesource.restygwt:restygwt:$restyGwtVersion")

  annotationProcessor("com.progressoft.brix.domino.apt:apt-client:$dominoVersion")
  annotationProcessor("com.google.auto.service:auto-service:$autoServiceVersion")
  annotationProcessor("com.progressoft.brix.domino.api:domino-api-shared:$dominoVersion")
  annotationProcessor("com.progressoft.brix.domino.api:domino-api-client:$dominoVersion")
  annotationProcessor("com.progressoft.brix.domino.impl:domino-gwt:$dominoVersion")

  compileOnly("com.google.auto.service:auto-service:$autoServiceVersion")

  // GWT framework
  compileOnly("com.google.gwt:gwt-user:$gwtVersion")
  compileOnly("com.google.gwt:gwt-dev:$gwtVersion")

  // spring
  compileOnly("org.springframework.boot:spring-boot-configuration-processor")
  compile("org.springframework.boot:spring-boot-starter-jetty")
  compile("org.springframework.boot:spring-boot-starter-web") {
    exclude module: "spring-boot-starter-tomcat"
  }
  compile("javax.ws.rs:javax.ws.rs-api:$wsrsapiVersion")

  compileOnly("org.projectlombok:lombok:$lombokVersion")
  annotationProcessor("org.projectlombok:lombok:$lombokVersion")

  // common testing
  testCompile("junit:junit:$junitVersion")
  testCompile("org.springframework.boot:spring-boot-starter-test")
}
